AWSTemplateFormatVersion: 2010-09-09
Description: >-
  QryptoAle_API_SAM_Typescript2

Transform: 'AWS::Serverless-2016-10-31'

Parameters:
  APINAME:
    Type: String
    Default: qryptoale_api_sam_typescript2
  ENV:
    Type: String
    Default: dev
  APIKEY:
    Type: String
  APISECRET:
    Type: String
  ORIGINWHITELIST:
    Type: String

Globals:
  Api:
    OpenApiVersion: 3.0.3 # API Gatewayに"Stage"というステージが作られてしまう問題を解消するため付与 issue: https://github.com/aws/serverless-application-model/issues/191 解説: https://qiita.com/shimajiri/items/cfcd6bda20e0b6f89d7f
  Function:
    Layers:
      - !Ref RuntimeDependenciesLayer
    Environment:
      Variables:
        APIKEY: !Ref APIKEY
        APISECRET: !Ref APISECRET
        ORIGINWHITELIST: !Ref ORIGINWHITELIST
    Runtime: nodejs14.x
    MemorySize: 128
    Timeout: 100

Resources:
  # -------------------CloudWatch
  ApiGatewayLogs:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/lambda/${APINAME}/${ENV} # Lambdaは"/aws/lambda/"から始まるロググループを作成する必要がある(じゃないとログを送ってくれない)
      RetentionInDays: 30
  # -------------------ApiGateway
  ApiGateway:
    Type: AWS::Serverless::Api
    Properties:
      Name: !Sub ${ENV}-${APINAME}
      StageName: !Ref ENV
  # -------------------Lambda
  ExampleFunction:
    Type: AWS::Serverless::Function
    DependsOn: ApiGatewayLogs # ロググループのリソースはLambdaを参照しているため、先にLambdaリソースが作成されている必要がある 参考: https://qiita.com/gotousua/items/08701e1216faccb59864
    Metadata:
      BuildMethod: makefile
    Properties:
      Handler: dist/handlers/example.exampleHandler # TypescriptをJavascriptにコンパイルしているのが/dist配下。Typescriptを直接実行はできないのでそこを参照させる。tsconfig.json: compilerOptions.outDirを参照。
      Description: A simple example includes a HTTP get method to get all items from a DynamoDB table.
      Events:
        Api:
          Type: Api
          Properties:
            Path: /
            Method: GET
            RestApiId: !Ref ApiGateway
  OptionFunction:
    Type: AWS::Serverless::Function
    DependsOn: ApiGatewayLogs # ロググループのリソースはLambdaを参照しているため、先にLambdaリソースが作成されている必要がある 参考: https://qiita.com/gotousua/items/08701e1216faccb59864
    Metadata:
      BuildMethod: makefile
    Properties:
      Handler: dist/handlers/preflight.preflightHandler # TypescriptをJavascriptにコンパイルしているのが/dist配下。Typescriptを直接実行はできないのでそこを参照させる。tsconfig.json: compilerOptions.outDirを参照。
      Description: A simple example includes a HTTP get method to get all items from a DynamoDB table.
      Events:
        Api:
          Type: Api
          Properties:
            Path: /portfolio/profit-ratio
            Method: OPTIONS
            RestApiId: !Ref ApiGateway
  GetProfitRatioFunction:
    Type: AWS::Serverless::Function
    DependsOn: ApiGatewayLogs # ロググループのリソースはLambdaを参照しているため、先にLambdaリソースが作成されている必要がある 参考: https://qiita.com/gotousua/items/08701e1216faccb59864
    Metadata:
      BuildMethod: makefile
    Properties:
      Handler: dist/handlers/portfolio.getProfitRatioHandler # TypescriptをJavascriptにコンパイルしているのが/dist配下。Typescriptを直接実行はできないのでそこを参照させる。tsconfig.json: compilerOptions.outDirを参照。
      Description: 所有する全シンボルの「利益率」を返す。
      Events:
        Api:
          Type: Api
          Properties:
            Path: /portfolio/profit-ratio
            Method: GET
            RestApiId: !Ref ApiGateway
  # -------------------Custom Layer
  RuntimeDependenciesLayer:
    Type: AWS::Serverless::LayerVersion
    Metadata:
      BuildMethod: makefile
    Properties:
      LayerName: !Sub '${APINAME}-dependencies'
      Description: Runtime dependencies for Lambdas
      ContentUri: ./
      CompatibleRuntimes:
        - nodejs14.x
      RetentionPolicy: Retain

Outputs:
  WebEndpoint:
    Description: 'API Gateway endpoint URL for Prod stage'
    Value: !Sub 'https://${ApiGateway}.execute-api.${AWS::Region}.amazonaws.com/${ENV}/'
